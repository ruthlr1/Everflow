@inherits EventDetailEditBase

@using Everflow.EventPlanner.UI.ServerSide.Components.Pages.People

@page "/events/new"
@page "/events/{Id:int}"

<PageTitle>@($"events[{Id}]")</PageTitle>

<div class="container-create form-width">
    <div class="row">
        <div class="col">
            <div class="form-group">
                <h3>Event</h3>
            </div>
        </div>
    </div>


    <EditForm Model="Model" OnSubmit="SubmitForm">
        <Blazored.FluentValidation.FluentValidationValidator />


        <div class="row">
            <div class="col">
                <div class="form-group">
                    <MudTextField @bind-Value="Model.EventDetailDescription" Label="Description" Variant="Variant.Outlined" Lines="5"></MudTextField>
                    <ValidationMessage For="@(() => Model.EventDetailDescription)" />
                </div>
            </div>
        </div>

        <div class="row">
            <div class="col">
                <div class="form-group">
                    <MudDatePicker @bind-Date="Model.EventDetailDate" Label="Date" Variant="Variant.Outlined"></MudDatePicker>
                    <ValidationMessage For="@(() => Model.EventDetailDate)" />
                </div>
            </div>
        </div>

        <div class="row">
            <div class="col">
                <div class="form-group">
                    <MudTimePicker @bind-time="Model.EventDetailStartTime" Label="Start Time" AmPm="true" Variant="Variant.Outlined"></MudTimePicker>
                    <ValidationMessage For="@(() => Model.EventDetailStartTime)" />
                </div>
            </div>
        </div>

        <div class="row">
            <div class="col">
                <div class="form-group">
                    <MudTimePicker @bind-time="Model.EventDetailEndTime" Label="End Time" AmPm="true" Variant="Variant.Outlined"></MudTimePicker>
                    <ValidationMessage For="@(() => Model.EventDetailEndTime)" />
                </div>
            </div>
        </div>

        <div class="row">
            <div class="col">
                <div class="form-group">
                    <PersonSelector @bind-SelectedPersonIds="Model.PersonIdsAttending" />
                    <ValidationMessage For="@(() => Model.PersonIdsAttending)" />
                </div>
            </div>
        </div>


        <div class="row">
            <div class="col">
                <div class="form-group">
                    <button type="submit" class="btn btn-success form-save-btn">Save</button>
                    <button type="button" class="btn btn-secondary form-cancel-btn" @onclick=NavBack>Cancel</button>
                </div>
            </div>
        </div>

    </EditForm>
</div>